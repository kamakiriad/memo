* VPCメモ
 * 導入
  - アジェンダ
     - *リージョンレベルで使用できるCloudFormationでのVPCの自動作成方法について見て行く。*
     - *VPCで大規模なネットワークを作成するとVPCのリソースの作成可能な上限値にひっかかり、それ以上VPC内にリソースを作れないといったことがある。*
     - *そのときは上限緩和申請を行うことになる* 
** VPCとは
  - (最後の締め）VPCでネットワーク空間を作り、インターネットにサービスを提供する必要があるサーバはPublic側に配置し、それに対してしっかり保護すべきサーバはプライベート側に配置していただければAWSに作ったシステムをセキュアに保護することができる。
** VPCの全体構成図
VPCの全体的なイメージとVPCの作成の流れを紹介していく
  1. 一番外側がAWS
  2. その内側にVPC
  3. VPCの中にはサブネットを作ることができる
     - 左側がパブリックサブネット
     - 右側がプライベートサブネット
       - プライベートサブネットのインスタンスがインターネットからパッチをダウンロードしたい場合、行うことができない
         - その場合はパブリックサブネット側にNATインスタンスを置くことで行える
         - *NATインスタンスは単一障害点になりがち*
         - *その場合はNATインスタンスのホットスタンバイとコールドスタンバイがある*
	   - *ホットスタンバイはNATインスタンス2台+インターナルELB*
	   - *コールドスタンバイはNATインスタンスのAMIを作成して障害が発生したときは復元*
       - また、インターネットからプライベートサブネットのインスタンスにログインしてメンテナンスしたい場合は、パブリックサブネットに踏み台サーバを置き、踏み台サーバにまずログインしてそこからプライベートサブネット側のホストにログインする。
	 - 踏み台サーバは常時起動している必要はないため、必要なときに起動するという形でよい
  4. 次にVPCにゲートウェイをアタッチ
     - ゲートウェイはVPC内外にパケットを送受信する際の通り道
     - ゲートウェイにはIGWとVGWがある
       - IGWはインターネットゲートウェイ
       - VGWはプライベートゲートウェイ
         - それぞれアイコンだと単一のように見えるが、単一障害点やネットワークのトラフィックのボトルネックにならないようにAWSの方で構築・運用管理されている
  5. 次がルートテーブルを作成してサブネットにアタッチ
     - ルートテーブルはルーティングテーブル。サブネット内のすべてのインスタンスに適用される。
     - どの宛先ネットワークにパケットを送信するときに、どのルータにとりあえずパケットを転送すべきかを登録する
       - その情報のことを経路情報と言う
       - デフォルトで経路情報は1つ登録されており、VPC内のインスタンスとは通信可能になっている
     - パブリックサブネットとプライベートサブネットの違いはルートテーブルのデフォルトゲートウエイにIGWが登録されているかされていないか
       - 登録されているのがパブリックサブネット
       - 登録されていないのがプライベートサブネット
       - プライベートサブネットからインターネットにアクセスする場合はルートテーブルにNATインスタンスをデフォルトゲートウェイに登録すること
  6. 特に言い忘れないようにすること
     - ルートテーブルにはデフォルトでVPC内のインスタンスと通信できるように経路情報が登録されている。
       - 登録されている経路情報は「VPCのネットワークアドレス    local」
     - NATインスタンスを配置すると、NATインスタンスが単一障害点になりがち
       - ホットスタンバイ構成なら「Internal ELB + NATインスタンスを2台」
       - コールドスタンバイ構成ならNATインスタンスのAMIから復元
     - NATインスタンスを配置して、それをプライベートサブネットのデフォルトゲートウェイにするとインターネットと通信可能に

** VPC関連の用語1
** VPC関連の用語2

** VPCの作成

    - 作成の流れ
      1. VPCの作成
      2. サブネットの作成
      3. IGWまたはVGWを作成し、VPCにアタッチ
      4. ルートテーブルを作成し、サブネットにアタッチ
 

    - 1. VPCの作成
      - 2013年5月以降にAWSアカウントを取った方はDefault VPC環境となっていて、デフォルトで１つVPCが作成され、パブリックサブネットもすべてのAZに対して作られている
      - VPCのネットワークアドレスに172.31.0.0/16が設定されている 
      - 通常はデフォルトで作成されているVPCをそのまま使うことはない。新しくネットワークをどう作るか*設計して*、独自に作成する
      - VPCの作成方法は2つ
      - ウイザードから作成
	- 簡単にVPCを作成可能
      - VPCの要素を1つ1つ作成
	- 一つ一つ設定をしっかり行いながら作成したい場合
      - VPCに割り当てるネットワークアドレスとプレフィックス長
	- オンプレと同じようにVPCを作成するときはVPCにネットワークアドレスを割り当てる
	- プレフィックス長は/16から/28までの範囲で割り当て可能
	  - いったんプリフィックス長を決めると変更できないので注意
	  - 基本的には広めのほうがいい
	- オンプレの一部として使いたい場合は、オンプレのネットワークアドレスの範囲と重ならないようにする必要あり
      - CloudFormationで自動作成可能
	- リージョンレベルのDR時に使用すると便利
	- 演習で確認


    - 2. サブネットの作成
      - パブリックとプライベートがあって、インターネットと直接やり取りできるサブネットがパブリック、それに対してインターネットと直接やりとりできないサブネットがプライベートサブネット
      - 違いがどこで出てくるかは、ルートテーブルにInternet Gatewayが登録されていればパブリックサブネット、そうでなければプライベートサブネット
      - サブネットの作成
	- VPCと同じでウイザードから作ることもできるし、手で一つ一つ作成することも可能
	- サブネット作成するときもネットワークアドレスとプレフィックス長を指定する
	  - VPC内のアドレス空間である必要がある
	- CloudFormationで自動作成も可能
	- *サブネットはAZに作成されるもので、1つのサブネットをAZをまたぐ形で作ることはできない*
      - ラボのサブネット
	- VPCはウイザードからの作成ではなく、ひとつひとつ作っていく
	- サブネットは6つ
	- パブリックサブネット側にNATインスタンスや踏み台サーバ、プライベート側にDBサーバなど配置する
      - ENIについて
	- ENIはEC2インスタンスにつける仮想的なネットワークインタフェース
	- ENIに割り当て可能なもの
	  - プライマリIPアドレス
	  - セカンダリIPアドレスなど
	- ENIは普通1つだけ割り当てて、それにPublicIPとPrivateIPを設定するパターンがほとんど
	- 例えばオンプレのNICの冗長化のため２つNICを割り当てて、片方をメイン、もう片方をスタンバイという形をとることがあるけど、ENIでは不要
	- ENIはあくまで仮想的なネットワークインタフェースで、1つ割り当てただけでも裏で物理的に冗長化されているので、冗長化のために複数のENIを接続する必要はない。
	- 複数のENIを接続するパターンは例えば、EC2インスタンスを複数のサブネットを接続するルータにしたい場合
	  - EC2インスタンスをルータにできて、ルータの接続先のサブネットにENIを作成して、それをEC2インスタンスに割り当てれば作成可能
      - EC2 VPCとEC2 Classic
	- 大きな違いはEC2インスタンスを保護するために用意されている機能が違う
	  - EC2 VPC
	    - Route Table, NACL, Security Group, ホストベースのIDS
	  - EC2 Classic
	    - Security Group, ホストベースのIDS


    - 3と4. ゲートウェイとルートテーブルの作成
      ゲートウェイを作成してVPCにアタッチする作業と、ルートテーブルを作成してサブネットにアタッチする作業についてまとめて見ていく
      - ルートテーブル
	- ルーティングテーブルでどのあて先ネットワークにパケットを送るときに、同じネットワーク上のどのゲートウェイにパケットを転送するかが登録されているもの
	- そのルーティングテーブルの中に登録する情報のことをルート、または経路情報という
	- ルートは宛先とターゲットから構成されている　
	  - 宛先はパケットの最終的な到達先のネットワークアドレス
	  - ターゲットは転送先のゲートウェイ
	  - ターゲットに登録できるものが色々と書かれているが、一般的に登録することが多いのがIGWまたはVGW
	  - ルートテーブルはサブネットに割り当て、サブネット内のすべてのインスタンスにルートテーブルの設定が適用される
	  - *また、サブネットに割り当て可能なルートテーブルは１つだけ*
	    - 1つのサブネットに複数のルートテーブルを割り当てることはできない
	  - もしサブネットにルートテーブルを割り当てなかった場合は「メインルートテーブル」が自動的に割り当てられる
	  - ルートテーブル自体は複数作ることができ、その中のどれかひとつだけをメインルートテーブルにするという決まりがある
      - IGW
	- IGWはインターネットから見たVPCのエンドポイント　
	  - インターネットとVPCとを接続しているルータ
	- ルートテーブルにIGWが登録されているサブネットがパブリックサブネット
	- 登録されていないサブネットがプライベートサブネット
      - NATインスタンス
        - プライベートサブネットのインスタンスがインターネットと直接やり取りできるようにするために配置するインスタンス 
	- プライベートサブネットからインターネットと直接やり取りすることができない
	- もしやり取りしたい場合はパブリックサブネットにNATインスタンスをおく必要がある。
	- NATインスタンスの実体はEC2インスタンス
	  - 1から作ることもできるし、専用のAMIもある
	- NATインスタンス作成後、プライベートサブネットのデフォルトルータをNATインスタンスにすることでインターネットとやり取り可能になる
	- あと前に単一障害点になりがちと言い、対処方法としてはコールドスタンバイとホットスタンバイの形式がある
      - オンプレとVPCとを接続する方法
	- 接続方法
	  1. インターネット経由でVPN接続
	  2. 専用線でDirectConnectで接続
        - インターネット経由でVPN接続
	  - IPSecを使用して接続
	  - 暗号化されるので安全に通信可能
	  - 可用性を考慮して2つのコネクションが作られる
	  - 必要なコンポーネント
	    - VGW（AWS側）
	    - カスタマーゲートウェイ（お客様側・物理ルータ）
        - 専用線でDirectConnectで接続
	  - 専用線でオンプレとAWSとを接続してDirectConnectの設定をして接続
	    - メリット：通信が速い・通信が安定している
	      - 日本ではニーズがある。
	    - デメリット：費用が高い
	    - 使いどころ
	      - オンプレからAWSへのバックアップ
	      - オンプレからAWSへのデータ移行
        - 
